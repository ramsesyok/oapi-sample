// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package openapi

// Defines values for FilterFieldType.
const (
	ExtractMatch FilterFieldType = "extract"
	PartialMatch FilterFieldType = "partial"
	PrefixMach   FilterFieldType = "prefix"
	SuffixMatch  FilterFieldType = "suffix"
)

// Defines values for SortFieldType.
const (
	SortAscend  SortFieldType = "asc"
	SortDescend SortFieldType = "desc"
)

// FilterField フィルタ情報
type FilterField struct {
	Field string `json:"field"`

	// Type 検索方法
	Type  FilterFieldType `json:"type"`
	Value string          `json:"value"`
}

// FilterFieldType 検索方法
type FilterFieldType string

// Landmark defines model for Landmark.
type Landmark struct {
	// Altitude 高度[m]
	Altitude float32 `json:"altitude"`

	// Description 地点概要
	Description string `json:"description"`

	// Id 地点識別番号
	ID *int `gorm:"primarykey" json:"id,omitempty"`

	// Latitude 緯度[deg]
	Latitude float64 `json:"latitude"`

	// Longitude 経度[deg]
	Longitude float64 `json:"longitude"`

	// Name 地点名称
	Name string `gorm:"unique" json:"name"`
}

// LandmarkProperties LandmarkProperties 地点情報のプロパティ
type LandmarkProperties struct {
	// Altitude 高度[m]
	Altitude *float32 `json:"altitude,omitempty"`

	// Description 地点概要
	Description *string `json:"description,omitempty"`

	// Latitude 緯度[deg]
	Latitude *float64 `json:"latitude,omitempty"`

	// Longitude 経度[deg]
	Longitude *float64 `json:"longitude,omitempty"`

	// Name 地点名称
	Name *string `gorm:"unique" json:"name,omitempty"`
}

// Landmarks 地点情報一覧
type Landmarks struct {
	// Count データ数
	Count int `json:"count"`

	// Items データ一覧
	Items []Landmark `json:"items"`

	// Total データ総数
	Total int `json:"total"`
}

// LocationSearchQuery 地点情報一覧
type LocationSearchQuery struct {
	// Filter フィルタ情報
	Filter *FilterField `json:"filter,omitempty"`

	// Page ページ番号
	Page int `json:"page"`

	// PerPage 取得データ数
	PerPage int `json:"perPage"`

	// Sort ソート情報
	Sort *SortField `json:"sort,omitempty"`
}

// SortField ソート情報
type SortField struct {
	Field string `json:"field"`

	// Type ソート方向
	Type SortFieldType `json:"type"`
}

// SortFieldType ソート方向
type SortFieldType string

// BadRequest BadRequest
type BadRequest struct {
	// Arguments メッセージ引数
	Arguments map[string]interface{} `json:"arguments"`

	// MessageId メッセージ識別子.言語ファイルのキーと同様
	MessageID string `json:"messageId"`

	// RequestId リクエスト識別子
	RequestID string `json:"requestId"`
}

// Created Created
type Created struct {
	// CreatedId 作成した識別子.IDが数値だった時も文字列として渡される.
	CreatedID string `json:"createdId"`

	// MessageId メッセージ識別子.言語ファイルのキーと同様
	MessageID string `json:"messageId"`

	// RequestId リクエスト識別子
	RequestID string `json:"requestId"`
}

// Deleted Deleted
type Deleted struct {
	// DeletedId 削除した識別番号.IDが数値だった時も文字列として渡される.
	DeletedID string `json:"deletedId"`

	// MessageId メッセージ識別子.言語ファイルのキーと同様
	MessageID string `json:"messageId"`

	// RequestId リクエスト識別子
	RequestID string `json:"requestId"`
}

// InternalServerError InternalServerError
type InternalServerError struct {
	// Arguments メッセージ引数
	Arguments map[string]interface{} `json:"arguments"`

	// MessageId メッセージ識別子.言語ファイルのキーと同様
	MessageID string `json:"messageId"`

	// RequestId リクエスト識別子
	RequestID string `json:"requestId"`
}

// NotFound NotFound
type NotFound struct {
	// Arguments メッセージ引数
	Arguments map[string]interface{} `json:"arguments"`

	// MessageId メッセージ識別子.言語ファイルのキーと同様
	MessageID string `json:"messageId"`

	// NotFoundId 見つからなかった識別子.IDが数値だった時も文字列として渡される.
	NotFoundID string `json:"notFoundId"`

	// RequestId リクエスト識別子
	RequestID string `json:"requestId"`
}

// Updated Updated
type Updated struct {
	// MessageId メッセージ識別子.言語ファイルのキーと同様
	MessageID string `json:"messageId"`

	// RequestId リクエスト識別子
	RequestID string `json:"requestId"`

	// UpdatedId 更新した識別番号.IDが数値だった時も文字列として渡される.
	UpdatedID string `json:"updatedId"`
}

// GetLandmarksParams defines parameters for GetLandmarks.
type GetLandmarksParams struct {
	// Page ページ番号
	Page int `form:"page" json:"page"`

	// PerPage ページあたりのデータ数
	PerPage int `form:"perPage" json:"perPage"`
}

// PostLandmarksJSONRequestBody defines body for PostLandmarks for application/json ContentType.
type PostLandmarksJSONRequestBody = Landmark

// PostLandmarksSearchJSONRequestBody defines body for PostLandmarksSearch for application/json ContentType.
type PostLandmarksSearchJSONRequestBody = LocationSearchQuery

// PatchLandmarksIDJSONRequestBody defines body for PatchLandmarksID for application/json ContentType.
type PatchLandmarksIDJSONRequestBody = LandmarkProperties

// PutLandmarksIDJSONRequestBody defines body for PutLandmarksID for application/json ContentType.
type PutLandmarksIDJSONRequestBody = Landmark
